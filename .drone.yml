---
kind: pipeline
name: prepare
trigger:
  branch:
  - master
  event:
  - push
clone:
  disable: true

steps:
- name: register-qemu
  image: multiarch/qemu-user-static:register
  command: [ "--reset" ]
  privileged: true

---
kind: pipeline
name: user-ubuntu-16.04
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-ubuntu arm64v8 arm32v7 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:16.04-arm64v8
    repo: phasecorex/user-ubuntu
    tags:
      - xenial-arm64v8
      - 16.04-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/ubuntu:16.04
      - ARCH=arm64v8

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:16.04-arm32v7
    repo: phasecorex/user-ubuntu
    tags:
      - xenial-arm32v7
      - 16.04-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/ubuntu:16.04
      - ARCH=arm32v7

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:16.04-amd64
    repo: phasecorex/user-ubuntu
    tags:
      - xenial-amd64
      - 16.04-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/ubuntu:16.04
      - ARCH=amd64

- name: docker-push-manifest-xenial
  image: plugins/manifest
  environment:
    DRONE_TAG: xenial
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-16.04
  image: plugins/manifest
  environment:
    DRONE_TAG: 16.04
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

depends_on:
  - prepare

---
kind: pipeline
name: user-ubuntu-20.04
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-ubuntu arm64v8 arm32v7 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:20.04-arm64v8
    repo: phasecorex/user-ubuntu
    tags:
      - devel-arm64v8
      - focal-arm64v8
      - 20.04-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/ubuntu:20.04
      - ARCH=arm64v8

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:20.04-arm32v7
    repo: phasecorex/user-ubuntu
    tags:
      - devel-arm32v7
      - focal-arm32v7
      - 20.04-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/ubuntu:20.04
      - ARCH=arm32v7

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:20.04-amd64
    repo: phasecorex/user-ubuntu
    tags:
      - devel-amd64
      - focal-amd64
      - 20.04-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/ubuntu:20.04
      - ARCH=amd64

- name: docker-push-manifest-devel
  image: plugins/manifest
  environment:
    DRONE_TAG: devel
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-focal
  image: plugins/manifest
  environment:
    DRONE_TAG: focal
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-20.04
  image: plugins/manifest
  environment:
    DRONE_TAG: 20.04
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

depends_on:
  - prepare

---
kind: pipeline
name: user-ubuntu-18.04
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-ubuntu arm64v8 arm32v7 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:18.04-arm64v8
    repo: phasecorex/user-ubuntu
    tags:
      - bionic-arm64v8
      - 18.04-arm64v8
      - latest-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/ubuntu:18.04
      - ARCH=arm64v8

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:18.04-arm32v7
    repo: phasecorex/user-ubuntu
    tags:
      - bionic-arm32v7
      - 18.04-arm32v7
      - latest-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/ubuntu:18.04
      - ARCH=arm32v7

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    cache_from: phasecorex/user-ubuntu:18.04-amd64
    repo: phasecorex/user-ubuntu
    tags:
      - bionic-amd64
      - 18.04-amd64
      - latest-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/ubuntu:18.04
      - ARCH=amd64

- name: docker-push-manifest-bionic
  image: plugins/manifest
  environment:
    DRONE_TAG: bionic
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-18.04
  image: plugins/manifest
  environment:
    DRONE_TAG: 18.04
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-latest
  image: plugins/manifest
  environment:
    DRONE_TAG: latest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

depends_on:
  - prepare

---
kind: pipeline
name: notify
trigger:
  branch:
  - master
  event:
  - push
  status:
  - success
  - failure
clone:
  disable: true

steps:
- name: send-notification
  image: appleboy/drone-discord
  allow_failure: true
  settings:
    webhook_id:
      from_secret: discord_webhook_id
    webhook_token:
      from_secret: discord_webhook_token
    message: >
      {{#success build.status}}
        **{{repo.name}}**: Build #{{build.number}} on {{build.branch}} branch succeeded!
      {{else}}
        **{{repo.name}}**: Build #{{build.number}} on {{build.branch}} branch failed. Fix me please. {{build.link}}
      {{/success}}

depends_on:
  - user-ubuntu-16.04
  - user-ubuntu-20.04
  - user-ubuntu-18.04

